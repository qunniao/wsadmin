{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\prodgroup\\prodgroupInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\prodgroup\\prodgroupInfo.vue","mtime":1571987076074},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    addProdGroupsDataAPI,\n    getProdGroupsDetailAPI,\n    updateProdGroupsDataAPI\n} from '@/api/prodGroupAPI.js'\nexport default {\n   name:'editor',\n  data () {\n    return {\n      // 规格列表\n      pgid:'',\n      dataForm:{\n        title:'',\n        domains: [],\n      },\n      imageShowUrl:''\n      // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n    }\n  },\n  components: {\n\n  },\n  props: {\n    prodgroupId: {\n      required: true,\n    },\n  },\n  computed: {\n  },\n  methods: {\n    /*\n      * 获取添加属性组\n      */\n    pushGroupFormData () {\n        this.$refs['dataForm'].validate((valid) => {\n          if(valid){\n            if(this.dataForm.domains.length<1){\n              this.$message({\n                type: 'error',\n                message: '请添加子分类',\n              });\n              return false\n            }\n            let namesdata =''\n            for(let i=0;i<this.dataForm.domains.length;i++){\n                if(i==0){\n                  namesdata+=''+this.dataForm.domains[i].value\n                }else{\n                  namesdata+=','+this.dataForm.domains[i].value\n                }\n            }\n            const  args = {\n                title:this.dataForm.title,\n                names:namesdata,\n            };\n            if(this.pgid!=0&&this.pgid!=''){\n              args.pgid=this.pgid\n              updateProdGroupsDataAPI(args)\n\t\t                .then(res => {\n\t\t                    const data = res.data;\n\t\t                    if (data.code === 200) {\n                                this.$message({\n                                    type: 'success',\n                                    message: '修改属性组成功',\n                                });\n\t\t                        this.backhtmls()\n                                this.$emit('finish-action')\n\t\t                    }else{\n\t\t                        this.$message.error(res.data.msg)\n\t\t                    }\n\t\t                })\n\t\t                .catch(err => {\n\t\t                });\n            }else{\n              addProdGroupsDataAPI(args)\n\t\t                .then(res => {\n\t\t                    const data = res.data;\n\t\t                    if (data.code === 200) {\n                                this.$message({\n                                    type: 'success',\n                                    message: '添加属性组成功',\n                                });\n\t\t                        this.backhtmls()\n                                this.$emit('finish-action')\n\t\t                    }else{\n\t\t                        this.$message.error(res.data.msg)\n\t\t                    }\n\t\t                })\n\t\t                .catch(err => {\n\t\t                });\n            }\n          }\n        })\n    },\n    removeDomain(item) {\n      console.log(123)\n        var index = this.dataForm.domains.indexOf(item)\n        if (index !== -1) {\n          this.dataForm.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.dataForm.domains.push({\n          value: '',\n          key: Date.now()\n        });\n      },\n    errorMsg (message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      })\n    },\n    getGroupDetail(groubid){\n            this.wholeLoding = true;\n            getProdGroupsDetailAPI(groubid)\n                .then(res => {\n                    let groupdata=res.data.data\n                    this.dataForm.title=groupdata.title\n                    let groupdatanamelsit =groupdata.names.split(',')\n                    for(let i=0;i<groupdatanamelsit.length;i++){\n                      this.dataForm.domains.push({value:groupdatanamelsit[i]})\n                    }\n                    console.log()\n                })\n                .catch(err => {\n                    this.wholeLoding = false;\n                })\n    },\n    /*\n      * 返回上层\n      */\n    backhtmls(){\n        this.$emit('close-form')\n    }    \n  },\n  mounted() {\n    if(this.prodgroupId!=0){\n      this.pgid=this.prodgroupId;\n      this.getGroupDetail(this.prodgroupId)\n    }\n  },\n}\n",{"version":3,"sources":["prodgroupInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"prodgroupInfo.vue","sourceRoot":"src\\components\\prodgroup","sourcesContent":["<template>\n  <div class=\"mod-prod-info\">\n    <el-form :model=\"dataForm\"\n             ref=\"dataForm\"\n             label-width=\"150px\">\n      <el-form-item label=\"属性组名称:\"\n                    prop=\"title\"\n                    :rules=\"[{ required: true, message: '属性值不能为空'}]\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"dataForm.title\"\n                    placeholder=\"请输入\"\n                    maxlength=\"50\"></el-input>\n        </el-col>\n      </el-form-item> \n       <el-form-item\n          v-for=\"(domain, index) in dataForm.domains\"\n          :label=\"'属性' + index+1\"\n          :key=\"domain.key\"\n          :prop=\"'domains.' + index + '.value'\"\n          :rules=\"{\n            required: true, message: '属性值不能为空', trigger: 'blur'\n          }\"\n        >\n        <el-col :span=\"8\">\n          <el-input v-model=\"domain.value\"></el-input>\n        </el-col>\n        <el-button @click.prevent=\"removeDomain(domain)\">删除</el-button>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"addDomain\">新增属性值</el-button>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\"\n                   @click=\"pushGroupFormData()\">确定</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {\n    addProdGroupsDataAPI,\n    getProdGroupsDetailAPI,\n    updateProdGroupsDataAPI\n} from '@/api/prodGroupAPI.js'\nexport default {\n   name:'editor',\n  data () {\n    return {\n      // 规格列表\n      pgid:'',\n      dataForm:{\n        title:'',\n        domains: [],\n      },\n      imageShowUrl:''\n      // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n    }\n  },\n  components: {\n\n  },\n  props: {\n    prodgroupId: {\n      required: true,\n    },\n  },\n  computed: {\n  },\n  methods: {\n    /*\n      * 获取添加属性组\n      */\n    pushGroupFormData () {\n        this.$refs['dataForm'].validate((valid) => {\n          if(valid){\n            if(this.dataForm.domains.length<1){\n              this.$message({\n                type: 'error',\n                message: '请添加子分类',\n              });\n              return false\n            }\n            let namesdata =''\n            for(let i=0;i<this.dataForm.domains.length;i++){\n                if(i==0){\n                  namesdata+=''+this.dataForm.domains[i].value\n                }else{\n                  namesdata+=','+this.dataForm.domains[i].value\n                }\n            }\n            const  args = {\n                title:this.dataForm.title,\n                names:namesdata,\n            };\n            if(this.pgid!=0&&this.pgid!=''){\n              args.pgid=this.pgid\n              updateProdGroupsDataAPI(args)\n\t\t                .then(res => {\n\t\t                    const data = res.data;\n\t\t                    if (data.code === 200) {\n                                this.$message({\n                                    type: 'success',\n                                    message: '修改属性组成功',\n                                });\n\t\t                        this.backhtmls()\n                                this.$emit('finish-action')\n\t\t                    }else{\n\t\t                        this.$message.error(res.data.msg)\n\t\t                    }\n\t\t                })\n\t\t                .catch(err => {\n\t\t                });\n            }else{\n              addProdGroupsDataAPI(args)\n\t\t                .then(res => {\n\t\t                    const data = res.data;\n\t\t                    if (data.code === 200) {\n                                this.$message({\n                                    type: 'success',\n                                    message: '添加属性组成功',\n                                });\n\t\t                        this.backhtmls()\n                                this.$emit('finish-action')\n\t\t                    }else{\n\t\t                        this.$message.error(res.data.msg)\n\t\t                    }\n\t\t                })\n\t\t                .catch(err => {\n\t\t                });\n            }\n          }\n        })\n    },\n    removeDomain(item) {\n      console.log(123)\n        var index = this.dataForm.domains.indexOf(item)\n        if (index !== -1) {\n          this.dataForm.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.dataForm.domains.push({\n          value: '',\n          key: Date.now()\n        });\n      },\n    errorMsg (message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      })\n    },\n    getGroupDetail(groubid){\n            this.wholeLoding = true;\n            getProdGroupsDetailAPI(groubid)\n                .then(res => {\n                    let groupdata=res.data.data\n                    this.dataForm.title=groupdata.title\n                    let groupdatanamelsit =groupdata.names.split(',')\n                    for(let i=0;i<groupdatanamelsit.length;i++){\n                      this.dataForm.domains.push({value:groupdatanamelsit[i]})\n                    }\n                    console.log()\n                })\n                .catch(err => {\n                    this.wholeLoding = false;\n                })\n    },\n    /*\n      * 返回上层\n      */\n    backhtmls(){\n        this.$emit('close-form')\n    }    \n  },\n  mounted() {\n    if(this.prodgroupId!=0){\n      this.pgid=this.prodgroupId;\n      this.getGroupDetail(this.prodgroupId)\n    }\n  },\n}\n</script>\n<style scoped=\"scoped\" lang=\"less\">\n.mbline{\n  margin-top:24px;\n  padding-left: 20px;\n  line-height: 40px;\n  background: rgb(249, 249, 249);\n}\n</style>"]}]}