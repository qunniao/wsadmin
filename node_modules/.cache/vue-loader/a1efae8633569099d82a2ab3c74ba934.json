{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\mainContent\\Index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\mainContent\\Index.vue","mtime":1577035436276},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1576862572617},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-tab--app-content {\n    .el-tabs__header {\n        margin-bottom: 0;\n    }\n    .el-tabs__content {\n        width: 100%;\n        position: absolute;\n        top: 41px;\n        bottom: 0;\n        overflow: auto;\n    }\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src\\components\\mainContent","sourcesContent":["<!-- 内容主题 Tab -->\n<template>\n    <el-tabs class=\"el-tab--app-content\" v-model=\"tabActive\" type=\"card\" @tab-click=\"clickTab\" @tab-remove=\"removeTab\">\n        <el-tab-pane\n        v-for=\"item in tabList\"\n        :key=\"item\"\n        :label=\"tabObj[item].name\"\n        :name=\"item\"\n        :lazy=\"true\"\n        :closable=\"item !== 'home'\"\n        >\n            <app-components style=\"width:100%;\" :tab-active=\"item\" :tab-list=\"tabObj\"></app-components>\n        </el-tab-pane>\n    </el-tabs>\n</template>\n\n<script>\n// app 系统内容组件\nconst AppComponents = () => import('./contentComponents.vue');\n\nimport {\n    MENU_LIST,\n} from '@/public/constant';\n\nimport { mapMutations } from 'vuex';\n\nexport default {\n    name:'',\n    data() {\n        return {\n            menuMap: {}, // 菜单映射，方便取值\n            tabObj: {\n                'home': {\n                    name: '首页',\n                    componentName: 'HomePage',\n                },\n            }, // 标签内容\n            tabList: ['home',], // 标签数组，控制顺序\n            tabActive: 'home',\n        };\n    },\n    components: {\n        AppComponents,\n    },\n    computed: {\n            itemActiveIndex() {\n                return this.$store.state.menu.itemActiveIndex;\n            },\n    },\n    watch: {\n        /**\n         * 导航点击触发选项卡变化\n         */\n        itemActiveIndex(newValue) {\n            console.log(\"mainContent-index.vue \"+newValue);\n            if (newValue) {\n                console.log(this.menuMap);\n                const msg = this.menuMap[newValue];\n                console.log(\"mainContent-index.vue***msg \"+msg);\n                console.log(msg);\n                if (Object.keys(this.tabObj).indexOf(newValue) === -1) {\n                    console.log(\"mainContent-index.vue***222 \"+this.tabObj);\n\n                    this.$set(this.tabObj, newValue, {\n                        name: msg.item.name,\n                        componentName: msg.item.componentName,\n                    });\n                    this.tabList.push(newValue+'');\n                     \n                }\n                console.log(\"mainContent-index.vue***444 newValue:\"+newValue);\n                console.log(this.tabList);\n                console.log(this.tabObj);\n                // 激活当前选项卡\n                this.tabActive = newValue;\n                console.log(this.tabActive);\n            }\n        },\n    },\n    methods: {\n        /**\n         * 映射 mutations\n         */\n        ...mapMutations('menu', {\n            changeActiveItem: 'changeActiveItem',\n        }),\n        /**\n         * 选项卡点击后修改导航激活的项目\n         * @param {Object} tabSelected 被选中的标签 tab 实例\n         */\n        clickTab(tabSelected) {\n            if (tabSelected.name !== 'home') {\n                this.changeActiveItem(tabSelected.name);\n            } else {\n                this.changeActiveItem('');\n            }\n        },\n        /**\n         * 点击 tab 移除按钮后触发\n         * @param {String} tabRemoveName 被删除的标签的 name\n         */\n        removeTab(tabRemoveName) {\n            if (tabRemoveName !== 'home') {\n                let tabs = [...this.tabList];\n                const indexRemove = tabs.indexOf(tabRemoveName);\n\n                this.tabList.splice(indexRemove, 1);\n                //如果关闭的tab为激活状态，关闭后激活显示前一个 tab 和导航\n                if (this.tabActive === tabRemoveName) {\n                    let currentIndex = tabs.indexOf(tabRemoveName);\n\n                    this.tabActive = tabs[currentIndex - 1];\n                    // 当关闭标签后，只剩 “首页” 标签，菜单置为无激活状态\n                    this.changeActiveItem(currentIndex - 1 === 0 ? '' : this.tabActive);\n                }\n                this.$delete(this.tabObj, tabRemoveName);\n            } else {\n                this.changeActiveItem('');\n            }\n        },\n    },\n    created() {\n        /**\n         * 重构菜单为映射，方便取值\n         */\n        const createMenuMap = (menuList) => {\n            //console.log(\"createMenuMap\");\n           // console.log(menuList);\n           // console.log(this.menuMap);\n\n            menuList.forEach(item => {\n                if (item.children && item.children.length > 0) {\n                    createMenuMap(item.children);\n                } else {\n                   // console.log(item);\n\n                    this.menuMap[item.id] = {item};\n                }\n            });\n           \n        }  \n        //console.log(MENU_LIST);\n       // console.log(this.menuMap);\n        createMenuMap(MENU_LIST);\n    },\n}\n</script>\n\n<style lang=\"less\">\n.el-tab--app-content {\n    .el-tabs__header {\n        margin-bottom: 0;\n    }\n    .el-tabs__content {\n        width: 100%;\n        position: absolute;\n        top: 41px;\n        bottom: 0;\n        overflow: auto;\n    }\n}\n</style>"]}]}