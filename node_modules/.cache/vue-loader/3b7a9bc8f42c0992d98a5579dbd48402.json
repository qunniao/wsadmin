{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\prodtype\\prodtypeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\prodtype\\prodtypeInfo.vue","mtime":1571897870622},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    getParamListAPI,\n    addProdTypeAPI,\n    getProdTypeDetailAPI,\n    getProdtypeLISTAPI,\n    PutProdTypeAPI\n} from '@/api/inventoryRecordAPI.js'\nexport default {\n   name:'editor',\n  data () {\n    return {\n      // 规格列表\n      level:'1',\n      typeSearch:[],\n      pgIdList:[],\n      onetypeidlist:[],\n      dataForm:{\n        pgId:'',\n        pid:'',\n        typeName:'',\n        sort:'',\n        cover:''\n      },\n      changeType:2,\n      imageShowUrl:''\n      // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n    }\n  },\n  components: {\n\n  },\n  props: {\n    prodtypeId: {\n      required: true,\n    },\n    prodtypeLevel:{\n      required: true,\n    },\n    prodchangeType:{\n      required: true,\n    }\n  },\n  computed: {\n    defalutSku () {\n      return this.$store.state.prod.defalutSku\n    }\n  },\n  activated () {\n    this.dataForm.prodId = this.$route.query.prodId\n    this.getDataList()\n  },\n  methods: {\n    uploadImg(res){\n      this.dataForm.cover = res.data;\n      this.imageShowUrl=res.data\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    },\n    dataFormSubmit () {\n        this.$refs['dataForm'].validate((valid) => {\n          const args = {\n                        pgId:this.dataForm.pgId,\n                        pid:this.dataForm.pid,\n                        typeName:this.dataForm.typeName,\n                        sort:this.dataForm.sort,\n                        cover:this.dataForm.cover\n                    };\n                    if(this.level==1){\n                      args.pid=0\n                    }\n                    // console.log(this.prodchangeType)\n                    if(this.changeType==1){\n                      addProdTypeAPI(args)\n                        .then(res => {\n                            const data = res.data;\n                            if (data.code === 200) {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '添加分类成功',\n                                    });\n                                this.backhtmls()\n                                    this.$emit('finish-action')\n                            }else{\n                                this.$message.error(res.data.msg)\n                            }\n                        })\n                        .catch(err => {\n                        });\n                    }else{\n                      args.tid=this.dataForm.tid\n                      PutProdTypeAPI(args)\n                        .then(res => {\n                            const data = res.data;\n                            if (data.code === 200) {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '修改分类成功',\n                                    });\n                                this.backhtmls()\n                                    this.$emit('finish-action')\n                            }else{\n                                this.$message.error(res.data.msg)\n                            }\n                        })\n                        .catch(err => {\n                        });\n                    }\n        })\n    },\n    getoneTypeList(id){\n      getProdtypeLISTAPI()\n                .then(res => {\n                    this.onetypeidlist=res.data.data.records\n                    if(id!=0){\n                      this.dataForm.pid=id\n                    }\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n    },\n    getProdTypeDetail(id){\n      const params =id\n            getProdTypeDetailAPI(params)\n                .then(res => {\n                    let prodtypeform= res.data.data\n                    console.log(prodtypeform)\n                    if(prodtypeform.pid!=0){\n                      this.level='2'\n                      this.getoneTypeList(prodtypeform.pid,1)\n                    }else{\n                      this.getoneTypeList(prodtypeform.tid,0)\n                    }\n                    this.dataForm=prodtypeform\n                    this.imageShowUrl=prodtypeform.cover\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n    },\n    getParamGroups(typechange){\n        const params = {\n            size:100,\n            current:1,\n        };\n\n            getParamListAPI(params)\n                .then(res => {\n                    const data = res.data.data;\n                    this.pgIdList=data.records\n                    if(typechange==2){\n                      console.log(this.prodtypeId)\n                      this.getProdTypeDetail(this.prodtypeId)\n                    }else{\n                      this.getoneTypeList(0,1)\n                    }\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n    },\n    errorMsg (message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      })\n    },\n    /*\n      * 返回上层\n      */\n    backhtmls(){\n        this.$emit('close-form')\n    }    \n  },\n  mounted() {\n      // console.log(123)\n      if(this.prodchangeType==1){\n        this.changeType=1\n        this.dataForm.pid=''\n        this.getParamGroups(1)\n      }else{\n        this.getParamGroups(2)\n      }\n  },\n}\n",null]}