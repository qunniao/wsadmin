{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\prodtype\\prodtypeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\prodtype\\prodtypeInfo.vue","mtime":1571897870622},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getParamListAPI, addProdTypeAPI, getProdTypeDetailAPI, getProdtypeLISTAPI, PutProdTypeAPI } from '@/api/inventoryRecordAPI.js';\nexport default {\n  name: 'editor',\n  data: function data() {\n    return {\n      // 规格列表\n      level: '1',\n      typeSearch: [],\n      pgIdList: [],\n      onetypeidlist: [],\n      dataForm: {\n        pgId: '',\n        pid: '',\n        typeName: '',\n        sort: '',\n        cover: ''\n      },\n      changeType: 2,\n      imageShowUrl: '' // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n\n    };\n  },\n  components: {},\n  props: {\n    prodtypeId: {\n      required: true\n    },\n    prodtypeLevel: {\n      required: true\n    },\n    prodchangeType: {\n      required: true\n    }\n  },\n  computed: {\n    defalutSku: function defalutSku() {\n      return this.$store.state.prod.defalutSku;\n    }\n  },\n  activated: function activated() {\n    this.dataForm.prodId = this.$route.query.prodId;\n    this.getDataList();\n  },\n  methods: {\n    uploadImg: function uploadImg(res) {\n      this.dataForm.cover = res.data;\n      this.imageShowUrl = res.data;\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        var args = {\n          pgId: _this.dataForm.pgId,\n          pid: _this.dataForm.pid,\n          typeName: _this.dataForm.typeName,\n          sort: _this.dataForm.sort,\n          cover: _this.dataForm.cover\n        };\n\n        if (_this.level == 1) {\n          args.pid = 0;\n        } // console.log(this.prodchangeType)\n\n\n        if (_this.changeType == 1) {\n          addProdTypeAPI(args).then(function (res) {\n            var data = res.data;\n\n            if (data.code === 200) {\n              _this.$message({\n                type: 'success',\n                message: '添加分类成功'\n              });\n\n              _this.backhtmls();\n\n              _this.$emit('finish-action');\n            } else {\n              _this.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {});\n        } else {\n          args.tid = _this.dataForm.tid;\n          PutProdTypeAPI(args).then(function (res) {\n            var data = res.data;\n\n            if (data.code === 200) {\n              _this.$message({\n                type: 'success',\n                message: '修改分类成功'\n              });\n\n              _this.backhtmls();\n\n              _this.$emit('finish-action');\n            } else {\n              _this.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {});\n        }\n      });\n    },\n    getoneTypeList: function getoneTypeList(id) {\n      var _this2 = this;\n\n      getProdtypeLISTAPI().then(function (res) {\n        _this2.onetypeidlist = res.data.data.records;\n\n        if (id != 0) {\n          _this2.dataForm.pid = id;\n        }\n      }).catch(function (err) {\n        _this2.tableLoading = false;\n      });\n    },\n    getProdTypeDetail: function getProdTypeDetail(id) {\n      var _this3 = this;\n\n      var params = id;\n      getProdTypeDetailAPI(params).then(function (res) {\n        var prodtypeform = res.data.data;\n        console.log(prodtypeform);\n\n        if (prodtypeform.pid != 0) {\n          _this3.level = '2';\n\n          _this3.getoneTypeList(prodtypeform.pid, 1);\n        } else {\n          _this3.getoneTypeList(prodtypeform.tid, 0);\n        }\n\n        _this3.dataForm = prodtypeform;\n        _this3.imageShowUrl = prodtypeform.cover;\n      }).catch(function (err) {\n        _this3.tableLoading = false;\n      });\n    },\n    getParamGroups: function getParamGroups(typechange) {\n      var _this4 = this;\n\n      var params = {\n        size: 100,\n        current: 1\n      };\n      getParamListAPI(params).then(function (res) {\n        var data = res.data.data;\n        _this4.pgIdList = data.records;\n\n        if (typechange == 2) {\n          console.log(_this4.prodtypeId);\n\n          _this4.getProdTypeDetail(_this4.prodtypeId);\n        } else {\n          _this4.getoneTypeList(0, 1);\n        }\n      }).catch(function (err) {\n        _this4.tableLoading = false;\n      });\n    },\n    errorMsg: function errorMsg(message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      });\n    },\n\n    /*\n      * 返回上层\n      */\n    backhtmls: function backhtmls() {\n      this.$emit('close-form');\n    }\n  },\n  mounted: function mounted() {\n    // console.log(123)\n    if (this.prodchangeType == 1) {\n      this.changeType = 1;\n      this.dataForm.pid = '';\n      this.getParamGroups(1);\n    } else {\n      this.getParamGroups(2);\n    }\n  }\n};",null]}