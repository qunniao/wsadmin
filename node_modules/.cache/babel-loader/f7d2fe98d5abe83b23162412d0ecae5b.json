{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\HtmlProjects\\wsadmin\\src\\public\\http.js","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\public\\http.js","mtime":1572690196799},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _objectSpread from \"E:\\\\HtmlProjects\\\\wsadmin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport axios from 'axios';\nimport Qs from 'qs';\nimport Vue from 'vue';\nimport router from '@/router';\nimport { Message } from 'element-ui';\nimport { BASE_URL } from './constant';\nVue.prototype.$message = Message;\n/**\n * axios 请求封装\n * @param {Object} config axios 配置\n * @param {Boolean} isFormData 是否为FormData，true 不设置请求头\n */\n\nvar http = function http(config) {\n  var isFormData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var headers = {};\n  headers['Authorization'] = \"\".concat(localStorage.getItem('token'));\n\n  if (!isFormData) {\n    headers['Content-Type'] = 'application/json';\n  }\n\n  if (config.headers) {\n    headers = _objectSpread({}, headers, config.headers);\n  }\n\n  var data = null; // Content-Type 为 application/x-www-form-urlencoded 并且 data 类型不为 formData 时序列化 data\n\n  if (Object.prototype.toString.call(config.data) !== '[object FormData]') {\n    data = !headers['Content-Type'] || headers['Content-Type'] === 'application/x-www-form-urlencoded' ? Qs.stringify(config.data) : config.data || '';\n  } else {\n    data = config.data;\n  }\n\n  var newRequest = new Promise(function (resolve, reject) {\n    axios(Object.assign({}, config, {\n      baseURL: BASE_URL,\n      url: config.url,\n      method: config.method || 'get',\n      headers: headers,\n      data: data,\n      params: config.params || '',\n      timeout: config.timeout || 0 // withCredentials: true,\n\n    })).then(function (response) {\n      if (response.data.code === 41000 || response.data.code == 41001 || response.data.code == 41002) {\n        Vue.prototype.$message({\n          type: 'error',\n          message: '登录信息过期！请重新登录'\n        });\n        reject('登录信息过期！请重新登录');\n        router.push('/login');\n      } else {\n        resolve(response);\n      }\n    }).catch(function (error) {\n      console.log(error);\n      reject(error);\n    });\n  });\n  return newRequest;\n};\n\nexport default http;",{"version":3,"sources":["E:\\HtmlProjects\\wsadmin\\src\\public\\http.js"],"names":["axios","Qs","Vue","router","Message","BASE_URL","prototype","$message","http","config","isFormData","headers","localStorage","getItem","data","Object","toString","call","stringify","newRequest","Promise","resolve","reject","assign","baseURL","url","method","params","timeout","then","response","code","type","message","push","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AAEA,SAAQC,QAAR,QAAuB,YAAvB;AAEAH,IAAII,SAAJ,CAAcC,QAAd,GAAyBH,OAAzB;AAEA;;;;;;AAKA,IAAMI,OAAO,SAAPA,IAAO,CAACC,MAAD,EAAgC;AAAA,MAAvBC,UAAuB,uEAAV,KAAU;AACzC,MAAIC,UAAU,EAAd;AAEAA,UAAQ,eAAR,cAA8BC,aAAaC,OAAb,CAAqB,OAArB,CAA9B;;AACA,MAAI,CAACH,UAAL,EAAiB;AACbC,YAAQ,cAAR,IAA0B,kBAA1B;AACH;;AAED,MAAIF,OAAOE,OAAX,EAAoB;AAChBA,gCAAcA,OAAd,EAA0BF,OAAOE,OAAjC;AACH;;AAED,MAAIG,OAAO,IAAX,CAZyC,CAczC;;AACA,MAAIC,OAAOT,SAAP,CAAiBU,QAAjB,CAA0BC,IAA1B,CAA+BR,OAAOK,IAAtC,MAAgD,mBAApD,EAAyE;AACrEA,WAAQ,CAACH,QAAQ,cAAR,CAAD,IAA4BA,QAAQ,cAAR,MAA4B,mCAAzD,GAAgGV,GAAGiB,SAAH,CAAaT,OAAOK,IAApB,CAAhG,GAA6HL,OAAOK,IAAP,IAAe,EAAnJ;AACH,GAFD,MAEO;AACHA,WAAOL,OAAOK,IAAd;AACH;;AAED,MAAMK,aAAa,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChDtB,UAAMe,OAAOQ,MAAP,CAAc,EAAd,EAAkBd,MAAlB,EAA0B;AAC5Be,eAASnB,QADmB;AAE5BoB,WAAKhB,OAAOgB,GAFgB;AAG5BC,cAAQjB,OAAOiB,MAAP,IAAiB,KAHG;AAI5Bf,eAASA,OAJmB;AAK5BG,YAAMA,IALsB;AAM5Ba,cAAQlB,OAAOkB,MAAP,IAAiB,EANG;AAO5BC,eAASnB,OAAOmB,OAAP,IAAkB,CAPC,CAQ5B;;AAR4B,KAA1B,CAAN,EAUKC,IAVL,CAUU,UAAUC,QAAV,EAAoB;AACtB,UAAIA,SAAShB,IAAT,CAAciB,IAAd,KAAuB,KAAvB,IAA8BD,SAAShB,IAAT,CAAciB,IAAd,IAAoB,KAAlD,IAAyDD,SAAShB,IAAT,CAAciB,IAAd,IAAoB,KAAjF,EAAwF;AACpF7B,YAAII,SAAJ,CAAcC,QAAd,CAAuB;AAACyB,gBAAM,OAAP;AAAgBC,mBAAS;AAAzB,SAAvB;AACAX,eAAO,cAAP;AACAnB,eAAO+B,IAAP,CAAY,QAAZ;AACH,OAJD,MAIO;AACHb,gBAAQS,QAAR;AACH;AACJ,KAlBL,EAmBKK,KAnBL,CAmBW,UAAUC,KAAV,EAAiB;AACpBC,cAAQC,GAAR,CAAYF,KAAZ;AACAd,aAAOc,KAAP;AACH,KAtBL;AAuBH,GAxBkB,CAAnB;AA0BA,SAAOjB,UAAP;AACH,CAhDD;;AAkDA,eAAeX,IAAf","sourcesContent":["import axios from 'axios';\nimport Qs from 'qs';\nimport Vue from 'vue';\nimport router from '@/router';\nimport {Message} from 'element-ui';\n\nimport {BASE_URL} from './constant';\n\nVue.prototype.$message = Message;\n\n/**\n * axios 请求封装\n * @param {Object} config axios 配置\n * @param {Boolean} isFormData 是否为FormData，true 不设置请求头\n */\nconst http = (config, isFormData = false) => {\n    let headers = {}\n\n    headers['Authorization'] = `${localStorage.getItem('token')}`;\n    if (!isFormData) {\n        headers['Content-Type'] = 'application/json';\n    }\n    \n    if (config.headers) {\n        headers = {...headers, ...config.headers};\n    }\n\n    let data = null;\n\n    // Content-Type 为 application/x-www-form-urlencoded 并且 data 类型不为 formData 时序列化 data\n    if (Object.prototype.toString.call(config.data) !== '[object FormData]') {\n        data = (!headers['Content-Type'] || headers['Content-Type'] === 'application/x-www-form-urlencoded') ? Qs.stringify(config.data) : (config.data || '');\n    } else {\n        data = config.data;\n    }\n\n    const newRequest = new Promise((resolve, reject) => {\n        axios(Object.assign({}, config, {\n            baseURL: BASE_URL,\n            url: config.url,\n            method: config.method || 'get',\n            headers: headers,\n            data: data,\n            params: config.params || '',\n            timeout: config.timeout || 0,\n            // withCredentials: true,\n        }))\n            .then(function (response) {\n                if (response.data.code === 41000||response.data.code==41001||response.data.code==41002) {\n                    Vue.prototype.$message({type: 'error', message: '登录信息过期！请重新登录'})\n                    reject('登录信息过期！请重新登录');\n                    router.push('/login');\n                } else {\n                    resolve(response);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                reject(error);\n            })\n    });\n\n    return newRequest;\n}\n\nexport default http;\n"]}]}