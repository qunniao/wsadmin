{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\prodgroup\\prodgroupInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\prodgroup\\prodgroupInfo.vue","mtime":1571987076074},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addProdGroupsDataAPI, getProdGroupsDetailAPI, updateProdGroupsDataAPI } from '@/api/prodGroupAPI.js';\nexport default {\n  name: 'editor',\n  data: function data() {\n    return {\n      // 规格列表\n      pgid: '',\n      dataForm: {\n        title: '',\n        domains: []\n      },\n      imageShowUrl: '' // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n\n    };\n  },\n  components: {},\n  props: {\n    prodgroupId: {\n      required: true\n    }\n  },\n  computed: {},\n  methods: {\n    /*\n      * 获取添加属性组\n      */\n    pushGroupFormData: function pushGroupFormData() {\n      var _this = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          if (_this.dataForm.domains.length < 1) {\n            _this.$message({\n              type: 'error',\n              message: '请添加子分类'\n            });\n\n            return false;\n          }\n\n          var namesdata = '';\n\n          for (var i = 0; i < _this.dataForm.domains.length; i++) {\n            if (i == 0) {\n              namesdata += '' + _this.dataForm.domains[i].value;\n            } else {\n              namesdata += ',' + _this.dataForm.domains[i].value;\n            }\n          }\n\n          var args = {\n            title: _this.dataForm.title,\n            names: namesdata\n          };\n\n          if (_this.pgid != 0 && _this.pgid != '') {\n            args.pgid = _this.pgid;\n            updateProdGroupsDataAPI(args).then(function (res) {\n              var data = res.data;\n\n              if (data.code === 200) {\n                _this.$message({\n                  type: 'success',\n                  message: '修改属性组成功'\n                });\n\n                _this.backhtmls();\n\n                _this.$emit('finish-action');\n              } else {\n                _this.$message.error(res.data.msg);\n              }\n            }).catch(function (err) {});\n          } else {\n            addProdGroupsDataAPI(args).then(function (res) {\n              var data = res.data;\n\n              if (data.code === 200) {\n                _this.$message({\n                  type: 'success',\n                  message: '添加属性组成功'\n                });\n\n                _this.backhtmls();\n\n                _this.$emit('finish-action');\n              } else {\n                _this.$message.error(res.data.msg);\n              }\n            }).catch(function (err) {});\n          }\n        }\n      });\n    },\n    removeDomain: function removeDomain(item) {\n      console.log(123);\n      var index = this.dataForm.domains.indexOf(item);\n\n      if (index !== -1) {\n        this.dataForm.domains.splice(index, 1);\n      }\n    },\n    addDomain: function addDomain() {\n      this.dataForm.domains.push({\n        value: '',\n        key: Date.now()\n      });\n    },\n    errorMsg: function errorMsg(message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      });\n    },\n    getGroupDetail: function getGroupDetail(groubid) {\n      var _this2 = this;\n\n      this.wholeLoding = true;\n      getProdGroupsDetailAPI(groubid).then(function (res) {\n        var groupdata = res.data.data;\n        _this2.dataForm.title = groupdata.title;\n        var groupdatanamelsit = groupdata.names.split(',');\n\n        for (var i = 0; i < groupdatanamelsit.length; i++) {\n          _this2.dataForm.domains.push({\n            value: groupdatanamelsit[i]\n          });\n        }\n\n        console.log();\n      }).catch(function (err) {\n        _this2.wholeLoding = false;\n      });\n    },\n\n    /*\n      * 返回上层\n      */\n    backhtmls: function backhtmls() {\n      this.$emit('close-form');\n    }\n  },\n  mounted: function mounted() {\n    if (this.prodgroupId != 0) {\n      this.pgid = this.prodgroupId;\n      this.getGroupDetail(this.prodgroupId);\n    }\n  }\n};",{"version":3,"sources":["prodgroupInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mod-prod-info\">\n    <el-form :model=\"dataForm\"\n             ref=\"dataForm\"\n             label-width=\"150px\">\n      <el-form-item label=\"属性组名称:\"\n                    prop=\"title\"\n                    :rules=\"[{ required: true, message: '属性值不能为空'}]\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"dataForm.title\"\n                    placeholder=\"请输入\"\n                    maxlength=\"50\"></el-input>\n        </el-col>\n      </el-form-item> \n       <el-form-item\n          v-for=\"(domain, index) in dataForm.domains\"\n          :label=\"'属性' + index+1\"\n          :key=\"domain.key\"\n          :prop=\"'domains.' + index + '.value'\"\n          :rules=\"{\n            required: true, message: '属性值不能为空', trigger: 'blur'\n          }\"\n        >\n        <el-col :span=\"8\">\n          <el-input v-model=\"domain.value\"></el-input>\n        </el-col>\n        <el-button @click.prevent=\"removeDomain(domain)\">删除</el-button>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"addDomain\">新增属性值</el-button>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\"\n                   @click=\"pushGroupFormData()\">确定</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {\n    addProdGroupsDataAPI,\n    getProdGroupsDetailAPI,\n    updateProdGroupsDataAPI\n} from '@/api/prodGroupAPI.js'\nexport default {\n   name:'editor',\n  data () {\n    return {\n      // 规格列表\n      pgid:'',\n      dataForm:{\n        title:'',\n        domains: [],\n      },\n      imageShowUrl:''\n      // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n    }\n  },\n  components: {\n\n  },\n  props: {\n    prodgroupId: {\n      required: true,\n    },\n  },\n  computed: {\n  },\n  methods: {\n    /*\n      * 获取添加属性组\n      */\n    pushGroupFormData () {\n        this.$refs['dataForm'].validate((valid) => {\n          if(valid){\n            if(this.dataForm.domains.length<1){\n              this.$message({\n                type: 'error',\n                message: '请添加子分类',\n              });\n              return false\n            }\n            let namesdata =''\n            for(let i=0;i<this.dataForm.domains.length;i++){\n                if(i==0){\n                  namesdata+=''+this.dataForm.domains[i].value\n                }else{\n                  namesdata+=','+this.dataForm.domains[i].value\n                }\n            }\n            const  args = {\n                title:this.dataForm.title,\n                names:namesdata,\n            };\n            if(this.pgid!=0&&this.pgid!=''){\n              args.pgid=this.pgid\n              updateProdGroupsDataAPI(args)\n\t\t                .then(res => {\n\t\t                    const data = res.data;\n\t\t                    if (data.code === 200) {\n                                this.$message({\n                                    type: 'success',\n                                    message: '修改属性组成功',\n                                });\n\t\t                        this.backhtmls()\n                                this.$emit('finish-action')\n\t\t                    }else{\n\t\t                        this.$message.error(res.data.msg)\n\t\t                    }\n\t\t                })\n\t\t                .catch(err => {\n\t\t                });\n            }else{\n              addProdGroupsDataAPI(args)\n\t\t                .then(res => {\n\t\t                    const data = res.data;\n\t\t                    if (data.code === 200) {\n                                this.$message({\n                                    type: 'success',\n                                    message: '添加属性组成功',\n                                });\n\t\t                        this.backhtmls()\n                                this.$emit('finish-action')\n\t\t                    }else{\n\t\t                        this.$message.error(res.data.msg)\n\t\t                    }\n\t\t                })\n\t\t                .catch(err => {\n\t\t                });\n            }\n          }\n        })\n    },\n    removeDomain(item) {\n      console.log(123)\n        var index = this.dataForm.domains.indexOf(item)\n        if (index !== -1) {\n          this.dataForm.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.dataForm.domains.push({\n          value: '',\n          key: Date.now()\n        });\n      },\n    errorMsg (message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      })\n    },\n    getGroupDetail(groubid){\n            this.wholeLoding = true;\n            getProdGroupsDetailAPI(groubid)\n                .then(res => {\n                    let groupdata=res.data.data\n                    this.dataForm.title=groupdata.title\n                    let groupdatanamelsit =groupdata.names.split(',')\n                    for(let i=0;i<groupdatanamelsit.length;i++){\n                      this.dataForm.domains.push({value:groupdatanamelsit[i]})\n                    }\n                    console.log()\n                })\n                .catch(err => {\n                    this.wholeLoding = false;\n                })\n    },\n    /*\n      * 返回上层\n      */\n    backhtmls(){\n        this.$emit('close-form')\n    }    \n  },\n  mounted() {\n    if(this.prodgroupId!=0){\n      this.pgid=this.prodgroupId;\n      this.getGroupDetail(this.prodgroupId)\n    }\n  },\n}\n</script>\n<style scoped=\"scoped\" lang=\"less\">\n.mbline{\n  margin-top:24px;\n  padding-left: 20px;\n  line-height: 40px;\n  background: rgb(249, 249, 249);\n}\n</style>"],"sourceRoot":"src\\components\\prodgroup"}]}