{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\mainContent\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\mainContent\\Index.vue","mtime":1577035436276},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"E:\\\\HtmlProjects\\\\wsadmin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport _objectSpread from \"E:\\\\HtmlProjects\\\\wsadmin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// app 系统内容组件\nvar AppComponents = function AppComponents() {\n  return import('./contentComponents.vue');\n};\n\nimport { MENU_LIST } from '@/public/constant';\nimport { mapMutations } from 'vuex';\nexport default {\n  name: '',\n  data: function data() {\n    return {\n      menuMap: {},\n      // 菜单映射，方便取值\n      tabObj: {\n        'home': {\n          name: '首页',\n          componentName: 'HomePage'\n        }\n      },\n      // 标签内容\n      tabList: ['home'],\n      // 标签数组，控制顺序\n      tabActive: 'home'\n    };\n  },\n  components: {\n    AppComponents: AppComponents\n  },\n  computed: {\n    itemActiveIndex: function itemActiveIndex() {\n      return this.$store.state.menu.itemActiveIndex;\n    }\n  },\n  watch: {\n    /**\n     * 导航点击触发选项卡变化\n     */\n    itemActiveIndex: function itemActiveIndex(newValue) {\n      console.log(\"mainContent-index.vue \" + newValue);\n\n      if (newValue) {\n        console.log(this.menuMap);\n        var msg = this.menuMap[newValue];\n        console.log(\"mainContent-index.vue***msg \" + msg);\n        console.log(msg);\n\n        if (Object.keys(this.tabObj).indexOf(newValue) === -1) {\n          console.log(\"mainContent-index.vue***222 \" + this.tabObj);\n          this.$set(this.tabObj, newValue, {\n            name: msg.item.name,\n            componentName: msg.item.componentName\n          });\n          this.tabList.push(newValue + '');\n        }\n\n        console.log(\"mainContent-index.vue***444 newValue:\" + newValue);\n        console.log(this.tabList);\n        console.log(this.tabObj); // 激活当前选项卡\n\n        this.tabActive = newValue;\n        console.log(this.tabActive);\n      }\n    }\n  },\n  methods: _objectSpread({}, mapMutations('menu', {\n    changeActiveItem: 'changeActiveItem'\n  }), {\n    /**\n     * 选项卡点击后修改导航激活的项目\n     * @param {Object} tabSelected 被选中的标签 tab 实例\n     */\n    clickTab: function clickTab(tabSelected) {\n      if (tabSelected.name !== 'home') {\n        this.changeActiveItem(tabSelected.name);\n      } else {\n        this.changeActiveItem('');\n      }\n    },\n\n    /**\n     * 点击 tab 移除按钮后触发\n     * @param {String} tabRemoveName 被删除的标签的 name\n     */\n    removeTab: function removeTab(tabRemoveName) {\n      if (tabRemoveName !== 'home') {\n        var tabs = _toConsumableArray(this.tabList);\n\n        var indexRemove = tabs.indexOf(tabRemoveName);\n        this.tabList.splice(indexRemove, 1); //如果关闭的tab为激活状态，关闭后激活显示前一个 tab 和导航\n\n        if (this.tabActive === tabRemoveName) {\n          var currentIndex = tabs.indexOf(tabRemoveName);\n          this.tabActive = tabs[currentIndex - 1]; // 当关闭标签后，只剩 “首页” 标签，菜单置为无激活状态\n\n          this.changeActiveItem(currentIndex - 1 === 0 ? '' : this.tabActive);\n        }\n\n        this.$delete(this.tabObj, tabRemoveName);\n      } else {\n        this.changeActiveItem('');\n      }\n    }\n  }),\n  created: function created() {\n    var _this = this;\n\n    /**\n     * 重构菜单为映射，方便取值\n     */\n    var createMenuMap = function createMenuMap(menuList) {\n      //console.log(\"createMenuMap\");\n      // console.log(menuList);\n      // console.log(this.menuMap);\n      menuList.forEach(function (item) {\n        if (item.children && item.children.length > 0) {\n          createMenuMap(item.children);\n        } else {\n          // console.log(item);\n          _this.menuMap[item.id] = {\n            item: item\n          };\n        }\n      });\n    }; //console.log(MENU_LIST);\n    // console.log(this.menuMap);\n\n\n    createMenuMap(MENU_LIST);\n  }\n};",null]}