{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\appHeader\\PasswordEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\appHeader\\PasswordEdit.vue","mtime":1574999591232},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { modifyPasswordAPI } from '@/api/globalAPI.js';\nexport default {\n  name: '',\n  data: function data() {\n    var _this = this;\n\n    /**\n     * 新密码验证规则\n     */\n    var validatNewPassword = function validatNewPassword(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请输入旧密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度需大于等于六位'));\n      } else {\n        callback();\n      }\n    };\n    /**\n     * 重新输入密码验证规则\n     */\n\n\n    var validatReinput = function validatReinput(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请再次输入新密码'));\n      } else if (value !== _this.form.newPassword) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      form: {\n        oldPassword: '',\n        newPassword: '',\n        passwordReinput: ''\n      },\n      rules: {\n        oldPassword: [{\n          required: true,\n          message: '请输入旧密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          validator: validatNewPassword,\n          trigger: 'blur'\n        }],\n        passwordReinput: [{\n          validator: validatReinput,\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  props: {\n    formReset: {\n      type: Boolean\n    }\n  },\n  watch: {\n    formReset: function formReset() {\n      this.resetForm();\n    }\n  },\n  methods: {\n    /**\n     * 提交修改密码\n     */\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      this.$refs.formEdit.validate(function (valid) {\n        if (valid) {\n          var args = {\n            pwd: _this2.form.oldPassword,\n            newPwd: _this2.form.newPassword\n          };\n\n          _this2.$confirm('即将修改密码, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            _this2.modifyPassword(args);\n          }).catch(function (err) {});\n        }\n      });\n    },\n\n    /**\n     * 修改密码请求\n     * @param {Object} args 修改密码请求参数\n     */\n    modifyPassword: function modifyPassword(args) {\n      var _this3 = this;\n\n      this.loading = true;\n      modifyPasswordAPI(args).then(function (res) {\n        var data = res.data;\n\n        if (data.code === 1000) {\n          _this3.$message({\n            type: 'success',\n            message: '修改密码成功，请重新登陆！'\n          });\n\n          _this3.$emit('close-form');\n\n          _this3.$emit('logout-system');\n        } else {\n          _this3.$message({\n            type: 'error',\n            message: data.msg\n          });\n\n          _this3.resetForm();\n        }\n\n        _this3.loading = false;\n      }).catch(function (err) {\n        _this3.loading = false;\n      });\n    },\n\n    /**\n     * 重置表单\n     */\n    resetForm: function resetForm() {\n      this.$refs.formEdit.resetFields();\n    },\n\n    /**\n     * 登出操作\n     */\n    logoutSystem: function logoutSystem() {\n      this.$store.commit('moduleLogin/logout');\n      this.$router.push('/login');\n    }\n  }\n};",null]}