{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\mainContent\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\mainContent\\Index.vue","mtime":1577035436276},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"E:\\\\HtmlProjects\\\\wsadmin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport _objectSpread from \"E:\\\\HtmlProjects\\\\wsadmin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// app 系统内容组件\nvar AppComponents = function AppComponents() {\n  return import('./contentComponents.vue');\n};\n\nimport { MENU_LIST } from '@/public/constant';\nimport { mapMutations } from 'vuex';\nexport default {\n  name: '',\n  data: function data() {\n    return {\n      menuMap: {},\n      // 菜单映射，方便取值\n      tabObj: {\n        'home': {\n          name: '首页',\n          componentName: 'HomePage'\n        }\n      },\n      // 标签内容\n      tabList: ['home'],\n      // 标签数组，控制顺序\n      tabActive: 'home'\n    };\n  },\n  components: {\n    AppComponents: AppComponents\n  },\n  computed: {\n    itemActiveIndex: function itemActiveIndex() {\n      return this.$store.state.menu.itemActiveIndex;\n    }\n  },\n  watch: {\n    /**\n     * 导航点击触发选项卡变化\n     */\n    itemActiveIndex: function itemActiveIndex(newValue) {\n      console.log(\"mainContent-index.vue \" + newValue);\n\n      if (newValue) {\n        console.log(this.menuMap);\n        var msg = this.menuMap[newValue];\n        console.log(\"mainContent-index.vue***msg \" + msg);\n        console.log(msg);\n\n        if (Object.keys(this.tabObj).indexOf(newValue) === -1) {\n          console.log(\"mainContent-index.vue***222 \" + this.tabObj);\n          this.$set(this.tabObj, newValue, {\n            name: msg.item.name,\n            componentName: msg.item.componentName\n          });\n          this.tabList.push(newValue + '');\n        }\n\n        console.log(\"mainContent-index.vue***444 newValue:\" + newValue);\n        console.log(this.tabList);\n        console.log(this.tabObj); // 激活当前选项卡\n\n        this.tabActive = newValue;\n        console.log(this.tabActive);\n      }\n    }\n  },\n  methods: _objectSpread({}, mapMutations('menu', {\n    changeActiveItem: 'changeActiveItem'\n  }), {\n    /**\n     * 选项卡点击后修改导航激活的项目\n     * @param {Object} tabSelected 被选中的标签 tab 实例\n     */\n    clickTab: function clickTab(tabSelected) {\n      if (tabSelected.name !== 'home') {\n        this.changeActiveItem(tabSelected.name);\n      } else {\n        this.changeActiveItem('');\n      }\n    },\n\n    /**\n     * 点击 tab 移除按钮后触发\n     * @param {String} tabRemoveName 被删除的标签的 name\n     */\n    removeTab: function removeTab(tabRemoveName) {\n      if (tabRemoveName !== 'home') {\n        var tabs = _toConsumableArray(this.tabList);\n\n        var indexRemove = tabs.indexOf(tabRemoveName);\n        this.tabList.splice(indexRemove, 1); //如果关闭的tab为激活状态，关闭后激活显示前一个 tab 和导航\n\n        if (this.tabActive === tabRemoveName) {\n          var currentIndex = tabs.indexOf(tabRemoveName);\n          this.tabActive = tabs[currentIndex - 1]; // 当关闭标签后，只剩 “首页” 标签，菜单置为无激活状态\n\n          this.changeActiveItem(currentIndex - 1 === 0 ? '' : this.tabActive);\n        }\n\n        this.$delete(this.tabObj, tabRemoveName);\n      } else {\n        this.changeActiveItem('');\n      }\n    }\n  }),\n  created: function created() {\n    var _this = this;\n\n    /**\n     * 重构菜单为映射，方便取值\n     */\n    var createMenuMap = function createMenuMap(menuList) {\n      //console.log(\"createMenuMap\");\n      // console.log(menuList);\n      // console.log(this.menuMap);\n      menuList.forEach(function (item) {\n        if (item.children && item.children.length > 0) {\n          createMenuMap(item.children);\n        } else {\n          // console.log(item);\n          _this.menuMap[item.id] = {\n            item: item\n          };\n        }\n      });\n    }; //console.log(MENU_LIST);\n    // console.log(this.menuMap);\n\n\n    createMenuMap(MENU_LIST);\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 内容主题 Tab -->\n<template>\n    <el-tabs class=\"el-tab--app-content\" v-model=\"tabActive\" type=\"card\" @tab-click=\"clickTab\" @tab-remove=\"removeTab\">\n        <el-tab-pane\n        v-for=\"item in tabList\"\n        :key=\"item\"\n        :label=\"tabObj[item].name\"\n        :name=\"item\"\n        :lazy=\"true\"\n        :closable=\"item !== 'home'\"\n        >\n            <app-components style=\"width:100%;\" :tab-active=\"item\" :tab-list=\"tabObj\"></app-components>\n        </el-tab-pane>\n    </el-tabs>\n</template>\n\n<script>\n// app 系统内容组件\nconst AppComponents = () => import('./contentComponents.vue');\n\nimport {\n    MENU_LIST,\n} from '@/public/constant';\n\nimport { mapMutations } from 'vuex';\n\nexport default {\n    name:'',\n    data() {\n        return {\n            menuMap: {}, // 菜单映射，方便取值\n            tabObj: {\n                'home': {\n                    name: '首页',\n                    componentName: 'HomePage',\n                },\n            }, // 标签内容\n            tabList: ['home',], // 标签数组，控制顺序\n            tabActive: 'home',\n        };\n    },\n    components: {\n        AppComponents,\n    },\n    computed: {\n            itemActiveIndex() {\n                return this.$store.state.menu.itemActiveIndex;\n            },\n    },\n    watch: {\n        /**\n         * 导航点击触发选项卡变化\n         */\n        itemActiveIndex(newValue) {\n            console.log(\"mainContent-index.vue \"+newValue);\n            if (newValue) {\n                console.log(this.menuMap);\n                const msg = this.menuMap[newValue];\n                console.log(\"mainContent-index.vue***msg \"+msg);\n                console.log(msg);\n                if (Object.keys(this.tabObj).indexOf(newValue) === -1) {\n                    console.log(\"mainContent-index.vue***222 \"+this.tabObj);\n\n                    this.$set(this.tabObj, newValue, {\n                        name: msg.item.name,\n                        componentName: msg.item.componentName,\n                    });\n                    this.tabList.push(newValue+'');\n                     \n                }\n                console.log(\"mainContent-index.vue***444 newValue:\"+newValue);\n                console.log(this.tabList);\n                console.log(this.tabObj);\n                // 激活当前选项卡\n                this.tabActive = newValue;\n                console.log(this.tabActive);\n            }\n        },\n    },\n    methods: {\n        /**\n         * 映射 mutations\n         */\n        ...mapMutations('menu', {\n            changeActiveItem: 'changeActiveItem',\n        }),\n        /**\n         * 选项卡点击后修改导航激活的项目\n         * @param {Object} tabSelected 被选中的标签 tab 实例\n         */\n        clickTab(tabSelected) {\n            if (tabSelected.name !== 'home') {\n                this.changeActiveItem(tabSelected.name);\n            } else {\n                this.changeActiveItem('');\n            }\n        },\n        /**\n         * 点击 tab 移除按钮后触发\n         * @param {String} tabRemoveName 被删除的标签的 name\n         */\n        removeTab(tabRemoveName) {\n            if (tabRemoveName !== 'home') {\n                let tabs = [...this.tabList];\n                const indexRemove = tabs.indexOf(tabRemoveName);\n\n                this.tabList.splice(indexRemove, 1);\n                //如果关闭的tab为激活状态，关闭后激活显示前一个 tab 和导航\n                if (this.tabActive === tabRemoveName) {\n                    let currentIndex = tabs.indexOf(tabRemoveName);\n\n                    this.tabActive = tabs[currentIndex - 1];\n                    // 当关闭标签后，只剩 “首页” 标签，菜单置为无激活状态\n                    this.changeActiveItem(currentIndex - 1 === 0 ? '' : this.tabActive);\n                }\n                this.$delete(this.tabObj, tabRemoveName);\n            } else {\n                this.changeActiveItem('');\n            }\n        },\n    },\n    created() {\n        /**\n         * 重构菜单为映射，方便取值\n         */\n        const createMenuMap = (menuList) => {\n            //console.log(\"createMenuMap\");\n           // console.log(menuList);\n           // console.log(this.menuMap);\n\n            menuList.forEach(item => {\n                if (item.children && item.children.length > 0) {\n                    createMenuMap(item.children);\n                } else {\n                   // console.log(item);\n\n                    this.menuMap[item.id] = {item};\n                }\n            });\n           \n        }  \n        //console.log(MENU_LIST);\n       // console.log(this.menuMap);\n        createMenuMap(MENU_LIST);\n    },\n}\n</script>\n\n<style lang=\"less\">\n.el-tab--app-content {\n    .el-tabs__header {\n        margin-bottom: 0;\n    }\n    .el-tabs__content {\n        width: 100%;\n        position: absolute;\n        top: 41px;\n        bottom: 0;\n        overflow: auto;\n    }\n}\n</style>"],"sourceRoot":"src\\components\\mainContent"}]}