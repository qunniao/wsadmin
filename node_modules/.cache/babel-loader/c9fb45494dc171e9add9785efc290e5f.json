{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\menu\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\menu\\Index.vue","mtime":1577030576308},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _objectSpread from \"E:\\\\HtmlProjects\\\\wsadmin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport NavItem from './NavItem';\nimport Vue from 'vue';\nimport router from '@/router';\nimport { Message } from 'element-ui';\nimport { getAuthListAPI, getAdminRolePowerListAPI } from '@/api/globalAPI.js';\nimport { MENU_LIST } from '@/public/constant';\nexport default {\n  name: 'NavMenu',\n  data: function data() {\n    return {\n      menuList: []\n    };\n  },\n  components: {\n    NavItem: NavItem\n  },\n  computed: _objectSpread({}, mapState('menu', {\n    itemActiveIndex: function itemActiveIndex(state) {\n      return state.itemActiveIndex;\n    }\n  })),\n  methods: {\n    /**\n     * 菜单点击选择事件\n     */\n    handleSelectMenu: function handleSelectMenu(index) {\n      console.log(\"handleSelectMenu index:\" + index);\n\n      if (index !== this.itemActiveIndex) {\n        this.$store.commit('menu/changeActiveItem', index);\n      }\n    },\n\n    /**\n     * 构建对应权限菜单\n     */\n    buildAuthNav: function buildAuthNav() {\n      var _this = this;\n\n      var params = {\n        rid: Number(sessionStorage.getItem('roleId'))\n      };\n      getAuthListAPI(params).then(function (res) {\n        // console.log(res.data.data)\n        var authList = res.data.data.map(function (item) {\n          return item.menu.name;\n        });\n\n        function buildNewMenu(arrayDone) {\n          var newArray = [];\n          arrayDone.forEach(function (item, index) {\n            if (item.children && item.children.length > 0) {\n              // 递归过滤 children \n              var newChildren = buildNewMenu(item.children); // 如果过滤后的 newChildren 长度大于零，push 该菜单\n\n              if (newChildren.length > 0) {\n                newArray.push(Object.assign({}, item, {\n                  children: newChildren\n                }));\n              }\n            } else {\n              if (authList.indexOf(item.name) > -1) {\n                newArray.push(item);\n              }\n            }\n          });\n          return newArray;\n        }\n\n        var newMenu = buildNewMenu(MENU_LIST);\n        _this.menuList = newMenu;\n      });\n    },\n\n    /**\n    * 构建对应权限菜单2\n    */\n    buildAuthNav2: function buildAuthNav2() {\n      var _this2 = this;\n\n      var params = {\n        roleId: Number(sessionStorage.getItem('roleId'))\n      };\n      getAdminRolePowerListAPI(params).then(function (res) {\n        console.log(\"buildAuthNav2\");\n        console.log(res.data);\n        var authList = res.data.data;\n        /*\n        function buildNewMenu(arrayDone) {\n            let newArray = [];\n            arrayDone.forEach((item, index) => {\n                if (item.children && item.children.length > 0) {\n                    // 递归过滤 children \n                    let newChildren = buildNewMenu(item.children);\n                    // 如果过滤后的 newChildren 长度大于零，push 该菜单\n                    if (newChildren.length > 0) {\n                        newArray.push(Object.assign({}, item, {\n                            children: newChildren,\n                        }));\n                    }\n                } else {\n                    if (authList.indexOf(item.name) > -1) {\n                        newArray.push(item);\n                    }\n                }\n            });\n             return newArray;\n        }\n        */\n        // let newMenu = buildNewMenu(MENU_LIST);\n\n        _this2.menuList = authList;\n      });\n    },\n    getCookie: function getCookie(c_name) {\n      if (document.cookie.length > 0) {\n        var c_start = document.cookie.indexOf(c_name + \"=\");\n\n        if (c_start != -1) {\n          c_start = c_start + c_name.length + 1;\n          var c_end = document.cookie.indexOf(\";\", c_start);\n          if (c_end == -1) c_end = document.cookie.length;\n          return unescape(document.cookie.substring(c_start, c_end)).replace(/\\\"/g, \"\");\n        }\n      }\n\n      return null;\n    }\n  },\n  created: function created() {\n    //  this.menuList = MENU_LIST;\n    this.buildAuthNav2(); // console.log(this.getCookie(\"userId\"))\n    // if(sessionStorage.getItem('token')==undefined||sessionStorage.getItem('token')==null||sessionStorage.getItem('token')==''){\n    //     Vue.prototype.$message({type: 'error', message: '登录信息过期！请重新登录'})\n    //     // reject('登录信息过期！请重新登录');\n    //     router.push('/login');\n    // }\n    // 重新登录设置首页为初始页面\n\n    this.$store.commit('menu/changeActiveItem', 'home');\n  }\n};",null]}