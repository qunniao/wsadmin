{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\prod\\sku-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\prod\\sku-table.vue","mtime":1572081809907},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import PicUpload from '@/components/pic-upload'\nexport default {\n  data: function data() {\n    return {\n      // 数据库中的规格\n      dbSpecs: [],\n      // 根据选定的规格所查询出来的规格值\n      dbSpecValues: [],\n      specs: [],\n      // 使用的规格\n      initing: false\n    };\n  },\n  components: {// PicUpload\n  },\n  props: {\n    value: {\n      default: [],\n      type: Array\n    }\n  },\n  watch: {},\n  // activated: function () {\n  //   this.$emit('input', [Object.assign({}, this.defalutSku)])\n  // },\n  created: function created() {// this.$http({\n    //   url: this.$http.adornUrl(`/prod/spec/list`),\n    //   method: 'get',\n    //   params: this.$http.adornParams()\n    // }).then(({data}) => {\n    //   this.dbSpecs = data\n    // })\n  },\n  computed: {\n    tableLeftTitles: function tableLeftTitles() {\n      var res = [];\n\n      for (var i = 0; i < this.skuTags.length; i++) {\n        var skuTag = this.skuTags[i];\n        res.push(skuTag.tagName);\n      }\n\n      return res;\n    },\n    skuTags: {\n      get: function get() {\n        return this.$store.state.prod.skuTags;\n      }\n    },\n    defalutSku: function defalutSku() {\n      return this.$store.state.prod.defalutSku;\n    }\n  },\n  methods: {\n    init: function init() {\n      this.initing = true;\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    },\n    getTableSpecData: function getTableSpecData() {\n      return this.value;\n    },\n    tableSpanMethod: function tableSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n    },\n    changeSkuCover: function changeSkuCover(index, res) {\n      console.log(res);\n      console.log(index);\n      this.value[index].pic = res.data;\n    },\n    changeSkuStatus: function changeSkuStatus(tagIndex) {\n      this.value[tagIndex].status = this.value[tagIndex].status ? 0 : 1;\n    },\n    skuAddProdName: function skuAddProdName() {\n      if (this.initing) {\n        return;\n      }\n\n      var skuList = [];\n\n      for (var i = 0; i < this.value.length; i++) {\n        var sku = Object.assign({}, this.value[i]);\n\n        if (!sku.properties) {\n          return;\n        }\n\n        sku.skuName = '';\n        var properties = sku.properties.split(';');\n\n        for (var propertiesKey in properties) {\n          sku.skuName += properties[propertiesKey].split(':')[1] + ' ';\n        }\n\n        skuList.push(sku);\n      }\n\n      this.$emit('input', skuList);\n    }\n  }\n};",null]}