{"remainingRequest":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HtmlProjects\\wsadmin\\src\\components\\prodtype\\prodtypeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HtmlProjects\\wsadmin\\src\\components\\prodtype\\prodtypeInfo.vue","mtime":1571897870622},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576862582236},{"path":"E:\\HtmlProjects\\wsadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getParamListAPI, addProdTypeAPI, getProdTypeDetailAPI, getProdtypeLISTAPI, PutProdTypeAPI } from '@/api/inventoryRecordAPI.js';\nexport default {\n  name: 'editor',\n  data: function data() {\n    return {\n      // 规格列表\n      level: '1',\n      typeSearch: [],\n      pgIdList: [],\n      onetypeidlist: [],\n      dataForm: {\n        pgId: '',\n        pid: '',\n        typeName: '',\n        sort: '',\n        cover: ''\n      },\n      changeType: 2,\n      imageShowUrl: '' // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n\n    };\n  },\n  components: {},\n  props: {\n    prodtypeId: {\n      required: true\n    },\n    prodtypeLevel: {\n      required: true\n    },\n    prodchangeType: {\n      required: true\n    }\n  },\n  computed: {\n    defalutSku: function defalutSku() {\n      return this.$store.state.prod.defalutSku;\n    }\n  },\n  activated: function activated() {\n    this.dataForm.prodId = this.$route.query.prodId;\n    this.getDataList();\n  },\n  methods: {\n    uploadImg: function uploadImg(res) {\n      this.dataForm.cover = res.data;\n      this.imageShowUrl = res.data;\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        var args = {\n          pgId: _this.dataForm.pgId,\n          pid: _this.dataForm.pid,\n          typeName: _this.dataForm.typeName,\n          sort: _this.dataForm.sort,\n          cover: _this.dataForm.cover\n        };\n\n        if (_this.level == 1) {\n          args.pid = 0;\n        } // console.log(this.prodchangeType)\n\n\n        if (_this.changeType == 1) {\n          addProdTypeAPI(args).then(function (res) {\n            var data = res.data;\n\n            if (data.code === 200) {\n              _this.$message({\n                type: 'success',\n                message: '添加分类成功'\n              });\n\n              _this.backhtmls();\n\n              _this.$emit('finish-action');\n            } else {\n              _this.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {});\n        } else {\n          args.tid = _this.dataForm.tid;\n          PutProdTypeAPI(args).then(function (res) {\n            var data = res.data;\n\n            if (data.code === 200) {\n              _this.$message({\n                type: 'success',\n                message: '修改分类成功'\n              });\n\n              _this.backhtmls();\n\n              _this.$emit('finish-action');\n            } else {\n              _this.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {});\n        }\n      });\n    },\n    getoneTypeList: function getoneTypeList(id) {\n      var _this2 = this;\n\n      getProdtypeLISTAPI().then(function (res) {\n        _this2.onetypeidlist = res.data.data.records;\n\n        if (id != 0) {\n          _this2.dataForm.pid = id;\n        }\n      }).catch(function (err) {\n        _this2.tableLoading = false;\n      });\n    },\n    getProdTypeDetail: function getProdTypeDetail(id) {\n      var _this3 = this;\n\n      var params = id;\n      getProdTypeDetailAPI(params).then(function (res) {\n        var prodtypeform = res.data.data;\n        console.log(prodtypeform);\n\n        if (prodtypeform.pid != 0) {\n          _this3.level = '2';\n\n          _this3.getoneTypeList(prodtypeform.pid, 1);\n        } else {\n          _this3.getoneTypeList(prodtypeform.tid, 0);\n        }\n\n        _this3.dataForm = prodtypeform;\n        _this3.imageShowUrl = prodtypeform.cover;\n      }).catch(function (err) {\n        _this3.tableLoading = false;\n      });\n    },\n    getParamGroups: function getParamGroups(typechange) {\n      var _this4 = this;\n\n      var params = {\n        size: 100,\n        current: 1\n      };\n      getParamListAPI(params).then(function (res) {\n        var data = res.data.data;\n        _this4.pgIdList = data.records;\n\n        if (typechange == 2) {\n          console.log(_this4.prodtypeId);\n\n          _this4.getProdTypeDetail(_this4.prodtypeId);\n        } else {\n          _this4.getoneTypeList(0, 1);\n        }\n      }).catch(function (err) {\n        _this4.tableLoading = false;\n      });\n    },\n    errorMsg: function errorMsg(message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      });\n    },\n\n    /*\n      * 返回上层\n      */\n    backhtmls: function backhtmls() {\n      this.$emit('close-form');\n    }\n  },\n  mounted: function mounted() {\n    // console.log(123)\n    if (this.prodchangeType == 1) {\n      this.changeType = 1;\n      this.dataForm.pid = '';\n      this.getParamGroups(1);\n    } else {\n      this.getParamGroups(2);\n    }\n  }\n};",{"version":3,"sources":["prodtypeInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mod-prod-info\">\n    <el-form :model=\"dataForm\"\n             ref=\"dataForm\"\n             label-width=\"150px\">\n      <el-form-item  label=\"设置级别\">\n          <el-radio v-model=\"level\" label=\"1\">一级</el-radio>\n          <el-radio v-model=\"level\" label=\"2\">二级</el-radio>\n      </el-form-item>\n      <el-form-item v-if=\"level==1\" label=\"一级分类名称:\"\n                    prop=\"typeName\"\n                    :rules=\"[{ required: true, message: '一级分类名称不能为空'}]\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"dataForm.typeName\"\n                    placeholder=\"请输入\"\n                    maxlength=\"50\"></el-input>\n        </el-col>\n      </el-form-item>\n      <div v-if=\"level==2\">\n        <el-form-item style=\"margin-top:10px\"  label=\"上级分类：\">\n            <el-select v-model=\"dataForm.pid\"  placeholder=\"请选择\" :rules=\"[{ required: true, message: '上级分类不能为空'}]\">\n              <el-option\n                v-for=\"item in onetypeidlist\"\n                :key=\"item.tid\"\n                :label=\"item.typeName\"\n                :value=\"item.tid\">\n              </el-option>\n            </el-select>\n        </el-form-item>\n        <el-form-item  label=\"二级分类名称:\"\n                    prop=\"typeName\"\n                    :rules=\"[{ required: true, message: '二级分类名称'}]\">\n          <el-col :span=\"8\">\n            <el-input v-model=\"dataForm.typeName\"\n                      placeholder=\"请输入\"\n                      maxlength=\"50\"></el-input>\n          </el-col>\n        </el-form-item> \n      </div>\n      <el-form-item style=\"margin-top:10px\"  label=\"关联属性组：\">\n            <el-select v-model=\"dataForm.pgId\"  placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in pgIdList\"\n                :key=\"item.pgId\"\n                :label=\"item.title\"\n                :value=\"item.pgId\">\n              </el-option>\n            </el-select>\n      </el-form-item>    \n      <el-form-item label=\"排序:\"\n                    prop=\"sort\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"dataForm.sort\"\n                    placeholder=\"请输入\"\n                    maxlength=\"50\"></el-input>\n        </el-col>\n      </el-form-item>\n      <el-form-item label=\"上传图片:\">\n        <el-upload\n            class=\"avatar-uploader\"\n            action=\"http://admin.zhanchengwlkj.com:8080/derivative_system_backstage/file/addFile\"\n            :show-file-list=\"false\"\n            name=\"files\"\n            :on-success=\"uploadImg\"\n            :before-upload=\"beforeAvatarUpload\">\n            <img v-if=\"imageShowUrl\" :src=\"imageShowUrl\" class=\"avatar\">\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n        </el-upload>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\"\n                   @click=\"dataFormSubmit()\">确定</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {\n    getParamListAPI,\n    addProdTypeAPI,\n    getProdTypeDetailAPI,\n    getProdtypeLISTAPI,\n    PutProdTypeAPI\n} from '@/api/inventoryRecordAPI.js'\nexport default {\n   name:'editor',\n  data () {\n    return {\n      // 规格列表\n      level:'1',\n      typeSearch:[],\n      pgIdList:[],\n      onetypeidlist:[],\n      dataForm:{\n        pgId:'',\n        pid:'',\n        typeName:'',\n        sort:'',\n        cover:''\n      },\n      changeType:2,\n      imageShowUrl:''\n      // resourcesUrl: window.SITE_CONFIG.resourcesUrl\n    }\n  },\n  components: {\n\n  },\n  props: {\n    prodtypeId: {\n      required: true,\n    },\n    prodtypeLevel:{\n      required: true,\n    },\n    prodchangeType:{\n      required: true,\n    }\n  },\n  computed: {\n    defalutSku () {\n      return this.$store.state.prod.defalutSku\n    }\n  },\n  activated () {\n    this.dataForm.prodId = this.$route.query.prodId\n    this.getDataList()\n  },\n  methods: {\n    uploadImg(res){\n      this.dataForm.cover = res.data;\n      this.imageShowUrl=res.data\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    },\n    dataFormSubmit () {\n        this.$refs['dataForm'].validate((valid) => {\n          const args = {\n                        pgId:this.dataForm.pgId,\n                        pid:this.dataForm.pid,\n                        typeName:this.dataForm.typeName,\n                        sort:this.dataForm.sort,\n                        cover:this.dataForm.cover\n                    };\n                    if(this.level==1){\n                      args.pid=0\n                    }\n                    // console.log(this.prodchangeType)\n                    if(this.changeType==1){\n                      addProdTypeAPI(args)\n                        .then(res => {\n                            const data = res.data;\n                            if (data.code === 200) {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '添加分类成功',\n                                    });\n                                this.backhtmls()\n                                    this.$emit('finish-action')\n                            }else{\n                                this.$message.error(res.data.msg)\n                            }\n                        })\n                        .catch(err => {\n                        });\n                    }else{\n                      args.tid=this.dataForm.tid\n                      PutProdTypeAPI(args)\n                        .then(res => {\n                            const data = res.data;\n                            if (data.code === 200) {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '修改分类成功',\n                                    });\n                                this.backhtmls()\n                                    this.$emit('finish-action')\n                            }else{\n                                this.$message.error(res.data.msg)\n                            }\n                        })\n                        .catch(err => {\n                        });\n                    }\n        })\n    },\n    getoneTypeList(id){\n      getProdtypeLISTAPI()\n                .then(res => {\n                    this.onetypeidlist=res.data.data.records\n                    if(id!=0){\n                      this.dataForm.pid=id\n                    }\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n    },\n    getProdTypeDetail(id){\n      const params =id\n            getProdTypeDetailAPI(params)\n                .then(res => {\n                    let prodtypeform= res.data.data\n                    console.log(prodtypeform)\n                    if(prodtypeform.pid!=0){\n                      this.level='2'\n                      this.getoneTypeList(prodtypeform.pid,1)\n                    }else{\n                      this.getoneTypeList(prodtypeform.tid,0)\n                    }\n                    this.dataForm=prodtypeform\n                    this.imageShowUrl=prodtypeform.cover\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n    },\n    getParamGroups(typechange){\n        const params = {\n            size:100,\n            current:1,\n        };\n\n            getParamListAPI(params)\n                .then(res => {\n                    const data = res.data.data;\n                    this.pgIdList=data.records\n                    if(typechange==2){\n                      console.log(this.prodtypeId)\n                      this.getProdTypeDetail(this.prodtypeId)\n                    }else{\n                      this.getoneTypeList(0,1)\n                    }\n                })\n                .catch(err => {\n                    this.tableLoading = false;\n                })\n    },\n    errorMsg (message) {\n      this.$message({\n        message: message,\n        type: 'error',\n        duration: 1500\n      })\n    },\n    /*\n      * 返回上层\n      */\n    backhtmls(){\n        this.$emit('close-form')\n    }    \n  },\n  mounted() {\n      // console.log(123)\n      if(this.prodchangeType==1){\n        this.changeType=1\n        this.dataForm.pid=''\n        this.getParamGroups(1)\n      }else{\n        this.getParamGroups(2)\n      }\n  },\n}\n</script>\n<style scoped=\"scoped\" lang=\"less\">\n.mbline{\n  margin-top:24px;\n  padding-left: 20px;\n  line-height: 40px;\n  background: rgb(249, 249, 249);\n}\n</style>"],"sourceRoot":"src\\components\\prodtype"}]}